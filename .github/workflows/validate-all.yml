# This workflow will install Python dependencies and run the included validation script.

name: Validate annotations

on:
  push:
    paths:
      - 'annotated-projects/**'
      - 'validate.py'
  pull_request:
    branches: [ master ]
    paths:
      - 'annotated-projects/**'
      - 'validate.py'
  schedule:
      - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install git+https://github.com/bigbio/sdrf-pipelines
    - name: Get a list of changed files
      if: github.event_name != 'schedule'
      id: getfiles
      run: |
        export OUTFILE=$HOME/filelist.txt
        if [ ${{ github.event_name }} == pull_request ]; then
            echo 'Changed files:'
            git diff-tree --no-commit-id --name-only -r origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }} | tee "$OUTFILE"
        else
          # push
          git diff-tree --no-commit-id --name-only -r ${{ github.event.before }} ${{ github.sha }} | tee "$OUTFILE"
        fi
    - name: Run validation
      # env:
        # FILELIST: ${{ steps.getfiles.outputs.files }}
      run: |
        export FILELIST=$HOME/filelist.txt
        cat "$FILELIST"
        if [ ${{ github.event_name }} == "schedule" ]; then
          echo "Validating all projects (schedule)"
          python validate.py -v
        elif grep -q '^validate.py' "$FILELIST"; then
          echo "Validating all projects (script changed)"
          python validate.py -v
        else
          projects=$(cat "$FILELIST" | grep '^annotated-projects' | cut -d/ -f 2)
          echo "Validating projects: $projects"
          python validate.py -v $projects
        fi

